// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rncwebview.djinni

package com.reactnativecommunity.webview;

import java.util.concurrent.atomic.AtomicBoolean;

/**
 * webview_event = record {
 *   id: i32;
 *   url: string;
 *   loading: bool;
 *   title: string;
 *   canGoBack: bool;
 *   canGoForward: bool;
 * }
 */
public abstract class WebviewLifecycle {
    /** onShouldStartLoadWithRequest(event: webview_event, url: string): bool; */
    public abstract boolean onShouldStartLoadWithRequest(String url);

    public static WebviewLifecycle create()
    {
        return CppProxy.create();
    }

    private static final class CppProxy extends WebviewLifecycle
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public boolean onShouldStartLoadWithRequest(String url)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_onShouldStartLoadWithRequest(this.nativeRef, url);
        }
        private native boolean native_onShouldStartLoadWithRequest(long _nativeRef, String url);

        public static native WebviewLifecycle create();
    }
}
